'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.render = exports.parse = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _lodash = require('lodash.startswith');

var _lodash2 = _interopRequireDefault(_lodash);

var _embedlyUrl = require('embedly-url');

var _renderIframe = require('../render-iframe');

var _renderIframe2 = _interopRequireDefault(_renderIframe);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var type = 'vine';

var checkSrc = function checkSrc(src) {
  return (0, _lodash2.default)(src, 'https://vine.co/v/');
};
var regexp = /https:\/\/vine\.co\/v\/([^\/]+)/;

var parse = exports.parse = function parse(_ref) {
  var _ref2 = _slicedToArray(_ref, 1),
      elm = _ref2[0];

  if (elm.tagName.toLowerCase() !== 'iframe') {
    return null;
  }

  var src = elm.getAttribute('src');
  if (!src) {
    return null;
  }

  var embedlyParsed = (0, _embedlyUrl.parse)(src);

  var url = embedlyParsed ? embedlyParsed.src : src;
  if (!checkSrc(url)) {
    return null;
  }

  var match = url.match(regexp);
  var id = match[1];

  return { type: type, url: url, id: id };
};

var render = exports.render = function render(_ref3) {
  var url = _ref3.url,
      _ref3$size = _ref3.size,
      size = _ref3$size === undefined ? 600 : _ref3$size;
  return (0, _renderIframe2.default)({
    src: url, width: size, height: size
  });
};