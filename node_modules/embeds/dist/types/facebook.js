'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.render = exports.parse = undefined;

var _virtualElement = require('virtual-element');

var _virtualElement2 = _interopRequireDefault(_virtualElement);

var _parseText = require('../parse-text');

var _parseText2 = _interopRequireDefault(_parseText);

var _renderText = require('../render-text');

var _renderText2 = _interopRequireDefault(_renderText);

var _parseInput = require('../parse-input');

var _parseInput2 = _interopRequireDefault(_parseInput);

var _lodash = require('lodash.last');

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var type = 'facebook';


var parsePost = function parsePost(elm) {
  var url = elm.getAttribute('data-href');
  var parsed = (0, _parseInput2.default)(url);
  if (!parsed) {
    return null;
  }

  var embedAs = parsed.embedAs;
  var pElm = elm.getElementsByTagName('p')[0];
  var text = (0, _parseText2.default)(pElm);
  var aElms = elm.getElementsByTagName('a') || [];
  var user = aElms[0] && aElms[0].childNodes[0] ? aElms[0].childNodes[0].data : '';
  var date = aElms[1] && aElms[1].childNodes[0] ? aElms[1].childNodes[0].data : '';

  return { embedAs: embedAs, type: type, url: url, text: text, date: date, user: user };
};

var parseVideo = function parseVideo(elm) {
  var url = elm.getAttribute('data-href');
  var embedAs = 'video';
  var aElms = elm.getElementsByTagName('a') || [];
  var headline = aElms[0] && aElms[0].childNodes[0] ? aElms[0].childNodes[0].data : '';
  var blockquoteElm = elm.getElementsByTagName('blockquote')[0];
  var date = blockquoteElm ? (((0, _lodash2.default)(blockquoteElm.childNodes) || {}).data || '').replace(' on ', '') : '';
  var user = {
    url: aElms[1] && aElms[1].getAttribute('href') || '',
    name: aElms[1] && aElms[1].childNodes[0] && aElms[1].childNodes[0].data || ''
  };
  var pElm = elm.getElementsByTagName('p')[0];
  var text = (0, _parseText2.default)(pElm);

  return { embedAs: embedAs, type: type, url: url, headline: headline, date: date, user: user, text: text };
};

var parseElm = function parseElm(elm) {
  if (!elm.classList.contains('fb-post') && !elm.classList.contains('fb-video')) {
    return null;
  }

  return elm.classList.contains('fb-video') ? parseVideo(elm) : parsePost(elm);
};

var parse = exports.parse = function parse(elements) {
  for (var i = 0; i < elements.length; ++i) {
    var results = parseElm(elements[i]);
    if (results) {
      return results;
    }
  }
  return null;
};

var renderVideo = function renderVideo(_ref) {
  var url = _ref.url,
      user = _ref.user,
      text = _ref.text,
      headline = _ref.headline,
      date = _ref.date;
  return (0, _virtualElement2.default)(
    'div',
    { 'class': 'fb-video', 'data-allowfullscreen': '1', 'data-href': url },
    (0, _virtualElement2.default)(
      'div',
      { 'class': 'fb-xfbml-parse-ignore' },
      (0, _virtualElement2.default)(
        'blockquote',
        { cite: url },
        (0, _virtualElement2.default)(
          'a',
          { href: url },
          headline
        ),
        (0, _virtualElement2.default)(
          'p',
          null,
          (0, _renderText2.default)(text)
        ),
        'Posted by ',
        (0, _virtualElement2.default)(
          'a',
          { href: user.url },
          user.name
        ),
        ' on ',
        date
      )
    )
  );
};

var renderPost = function renderPost(_ref2) {
  var url = _ref2.url,
      user = _ref2.user,
      date = _ref2.date,
      text = _ref2.text;
  return (0, _virtualElement2.default)(
    'div',
    { 'class': 'fb-post', 'data-href': url, 'data-width': '500' },
    (0, _virtualElement2.default)(
      'div',
      { 'class': 'fb-xfbml-parse-ignore' },
      (0, _virtualElement2.default)(
        'blockquote',
        { cite: url },
        (0, _virtualElement2.default)(
          'p',
          null,
          (0, _renderText2.default)(text)
        ),
        'Posted by ',
        (0, _virtualElement2.default)(
          'a',
          { href: '#', role: 'button' },
          user
        ),
        ' on ',
        (0, _virtualElement2.default)(
          'a',
          { href: url },
          date
        )
      )
    )
  );
};

var renderTypes = {
  video: renderVideo,
  post: renderPost,
  photo: renderPost
};

var render = exports.render = function render(opts) {
  return renderTypes[opts.embedAs] ? renderTypes[opts.embedAs](opts) : renderTypes.post(opts);
};